plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    //id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.innowise'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootStarterVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootStarterVersion}"
    testImplementation "org.springframework.security:spring-security-test:${springSecurityTestVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiStarterWebmvcVersion}"
    //implementation 'io.springfox:springfox-boot-starter:3.0.0'
// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    //implementation 'io.springfox:springfox-swagger2:3.0.0'
    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'


    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtokenVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jsonwebtokenVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jsonwebtokenVersion}"
    implementation "org.flywaydb:flyway-core:${flywayCoreVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"
    testImplementation "com.h2database:h2:${h2databaseVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${junitJupiterVersion}"
    testImplementation "org.testcontainers:postgresql:${testcontainersPostgresqlVersion}"
    testImplementation "org.springframework:spring-test:${springTestVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${openfeignVersion}"
    implementation "org.springframework.kafka:spring-kafka:${springKafkaVersion}"
    implementation "org.springframework:spring-websocket:${websocket}"
    implementation "org.springframework:spring-messaging:${websocket}"
    implementation "net.logstash.logback:logstash-logback-encoder:7.3"
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.0.6'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.0'

    //https://www.youtube.com/watch?v=KMWrpI8an7o
    implementation("com.querydsl:querydsl-core:${queryDslVersion}")
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta")
    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta",
            "jakarta.persistence:jakarta.persistence-api:3.1.0"
    )


}


//tasks.named('test') {
//    useJUnitPlatform()
//}
