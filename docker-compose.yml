version: '3.9'
services:

  car_app_postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: dudeWhereIsMyCar
      POSTGRES_HOST: postgres
    expose:
      - 5432
    networks:
      - car_app_postgres

  car_app_pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    depends_on:
      - car_app_postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: toha@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 1111
    networks:
      - car_app_postgres

  app:
    build: ./
    container_name: 'DudeWhereIsMyCar_backend'
    ports:
      - "8080:8080"
    depends_on:
      - car_app_postgres
      - broker
      - logstash
      - elasticsearch
      - currencies
    networks:
      - elastic
      - kafka
      - car_app_postgres
      - currencies
    environment:
      FEIGN_CONFIG_NAME: currency
      FEIGN_CONFIG_URL: currencies:8080
      FEIGN_CONFIG_VALUE_GET_RATE: /api/currency/v1
      DATASOURCE_URL: jdbc:postgresql://car_app_postgres:5432/dudeWhereIsMyCar
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: 1111


  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_BOOTSTRAP_SERVERS: localhost:9092
    networks:
      - kafka
  #ELK
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elasticsearch_springboot
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: kibana_springboot
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2
    container_name: logstash_springboot
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      - elasticsearch
  ##################################################
  currencies:
    build: ./currencies
    container_name: 'currencies'
    ports:
      - "8082:8080"
    depends_on:
      - currencies_postgres
    networks:
      - currencies_postgres
      - currencies

  currencies_postgres:
    image: postgres:15
    container_name: currencies_postgres

    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: currencies
      POSTGRES_HOST: postgres
    expose:
      - 5432
    ports:
      - "5433:5432"
    networks:
      - currencies_postgres


  currencies_pgadmin:
    image: dpage/pgadmin4
    container_name: currencies_pgadmin
    restart: always
    ports:
      - "5051:80"
    depends_on:
      - currencies_postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: toha@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 1111
    networks:
      - currencies_postgres

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
#
  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000

  #grafana:
  #  build: './config/grafana'
  #  ports:
  #    - 3000:3000
  #  volumes:
  #    - ./grafana:/var/lib/grafana
  #  environment:
  #    - GF_SECURITY_ADMIN_USER=admin
  #    - GF_SECURITY_ADMIN_PASSWORD=admin
  #  networks:
  #    monitoring:
  #      aliases:
  #        - grafana
  #prometheus:
  #  image: prom/prometheus
  #  ports:
  #    - 9090:9090
  #  volumes:
  #    - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
  #    - ./prometheus:/prometheus
  #  networks:
  #    monitoring:
  #      aliases:
  #        - prometheus

networks:
  elastic:
    driver: bridge
  kafka:
    driver: bridge
  car_app_postgres:
    driver: bridge
  currencies_postgres:
    driver: bridge
  #monitor-net:
  #monitoring:

  currencies:
    #external: true
    name: shared-currencies
    driver: bridge

volumes:
  grafana-data:
  prometheus_data:
  elasticsearch_data:
    driver: local




